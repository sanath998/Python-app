name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
permissions:
  id-token: write
  contents: read
jobs:
  Run-Terraform-Plan:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::796475405487:role/Github_actions_role
      - name: Terraform init
        run: |
          cd terraform
          terraform init
      - name: Terraform plan
        run: |
          cd terraform && terraform plan
      - name: Save data
        uses: actions/upload-artifact@master
        with:
          name: all-tf-files
          path: .

  Terraform-Apply:
    runs-on: ubuntu-latest
    needs: Run-Terraform-Plan
    environment: dev
    steps:
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::796475405487:role/Github_actions_role
      - name: Retrieve terraform config
        uses: actions/download-artifact@master
        with:
          name: all-tf-files
          path: .
      - name: Terraform init
        run: |
          cd terraform
          terraform init
      - name: Terraform apply
        run: cd terraform && terraform apply --auto-approve
      - name: Terraform destroy
        run: cd terraform && terraform destroy --auto-approve
      
